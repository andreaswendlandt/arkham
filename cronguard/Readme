# CRONGUARD - ensure that your cronjobs finish succesfully or get notified via mail if they don't
* this application consists of 3 parts, at the client side the client wrapper script cron_wrapper.sh, at the server side the cronguard daemon   and the cronguard.php script - therefor a running web- and database server is required 

1. client
 1.1 cronwrapper
  - script cron_wrapper.sh
  - reports to the cronguard server via curl the start of a cronjob, the end and the succesful or nonsuccesful result of the cronjob
  - dependency: the package 'curl' must be installed
  - example: ./cron_wrapper.sh "command1 | command2 | command3" or ./cron_wrapper.sh "your_script" or ./cron_wrapper.sh "command"
 1.2 required file
  - url.inc.sh - in that file is the url to the cronguard server, cron_wrapper.sh expects it in the direcory /opt/cronguard

2. server
 2.1 database (mysql server)
  - dependency - the following packages must be installed:
    libmysqlclient20:amd64
    mysql-client-5.7
    mysql-client-core-5.7
    mysql-common
    mysql-server
    mysql-server-5.7
    mysql-server-core-5.7
    
 2.1.1 database creation (mysql)
  - mysql table structure:
    jobid(bigint)
    token(char 6)
    host(varchar 50)
    start_time(bigint)
    end_time(bigint)
    command(varchar 300)
    action(varchar 8)
    result(varchar 7)
  - mysql commands to create the database and table:
   - CREATE DATABASE cronguard;
   - CREATE TABLE jobs ( jobid INT NOT NULL AUTO_INCREMENT, token CHAR(6), host VARCHAR(50), start_time BIGINT, end_time BIGINT, command VARCHAR(300), action VARCHAR(8), result VARCHAR(7), PRIMARY KEY (jobid) ) ENGINE MyISAM;

 2.2 webserver + php
  - in case of apache2 and php(in that example php-7.2) the following packages must be installe:
    apache2
    apache2-bin
    apache2-data
    apache2-utils
    libapache2-mod-dnssd
    libapache2-mod-php7.2
    php
    php-common
    php-json
    php7.2
    php7.2-cli
    php7.2-common
    php7.2-json
    php7.2-mysql
    php7.2-opcache
    php7.2-readline
        
 2.3 cronguard server script cronguard.php - has two functionalities:
  2.3.1 server for the cron wrapper, it receives the data that is sent from the cron wrapper via post and writes it into the database
  2.3.2 rest api:
   - in case there are entries in the database you can look at them with a browser by calling the following url:
     http://localhost/cronguard.php?method=api
     you get all entries in json format or, if there are none, you get "0 Results"
  2.3.3 required file
   - the file db.inc.php needs to be in place in the same directory, it manages all database connections

 3. cronguard daemon - the script cronguard.sh
 - wertet die datenbank eintr√§ge aus und benachrichtigt bei fehlerhaften cronjobs(eventuell nagios schnittstelle)
